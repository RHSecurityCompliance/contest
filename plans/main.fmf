# do not inherit test-specific metadata from toplevel
/:
    inherit: false

discover:
    how: fmf

execute:
    how: tmt

adjust:
  - prepare+:
      - how: shell
        name: install-epel-on-rhel7
        because: python3 is not on RHEL 7 by default
        script: |
            set -xe
            if ! rpm -q epel-release; then
                curl --retry 10 -sSfkL -o epel-release.rpm https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
                rpm -ivh epel-release.rpm
                rm -f epel-release.rpm
            fi
    when: distro < rhel-8

  - prepare+:
      # TODO: probably turn this into 'rpm -q git || dnf -y install git-core' below, after RHEL-7
      - how: install
        package:
          - git-core
      - how: shell
        name: Download and build latest or pull request content
        script: |
            set -xe
            if [ -n "$CONTEST_CONTENT_LATEST" ]; then
                ref=HEAD
            elif [ -n "$CONTEST_CONTENT_PR" ]; then
                ref="refs/pull/$CONTEST_CONTENT_PR/head"
            else
                exit 0
            fi
            content_dir=/root/upstream-content
            [ -e "$content_dir" ] || git init "$content_dir"
            cd "$content_dir"
            old_fetch_head=$(git rev-parse FETCH_HEAD 2>/dev/null) || true
            git fetch --depth=1 https://github.com/ComplianceAsCode/content.git "$ref"
            new_fetch_head=$(git rev-parse FETCH_HEAD)
            if [ "$old_fetch_head" != "$new_fetch_head" ]; then
                # remove any previously built content
                git clean -ffdx
                git checkout FETCH_HEAD
            fi
            echo "CONTEST_CONTENT=$content_dir" >> "$TMT_PLAN_ENVIRONMENT_FILE"

  - prepare+:
      - how: shell
        name: Update OpenSCAP from Packit (if specified)
        script: |
            set -xe
            # both result in the same URL on fedoraproject.org
            if [ -n "$CONTEST_OSCAP_BRANCH" ]; then
                ref="$CONTEST_OSCAP_BRANCH"
            elif [ -n "$CONTEST_OSCAP_PR" ]; then
                ref="$CONTEST_OSCAP_PR"
            else
                exit 0
            fi
            repofile=/etc/yum.repos.d/openscap-upstream-packit.repo
            rm -f "$repofile"
            if rpm -q openscap-scanner; then
                # the RPM might have been upgraded from another PR, sanitize it
                dnf -q -y downgrade openscap-scanner
            else
                # this runs before test dependencies are installed
                dnf -q -y install openscap-scanner
            fi
            # download a Packit-provided repository
            major=$(. /etc/os-release && echo "${VERSION_ID%%.*}")
            repourl="https://copr.fedorainfracloud.org/coprs/packit/OpenSCAP-openscap-$ref/repo/centos-stream-$major/packit-OpenSCAP-openscap-$ref-centos-stream-$major.repo"
            curl --retry 10 -sSfkL -o "$repofile" "$repourl"
            trap "rm -f \"$repofile\"" ERR
            # check that the per-PR repo contains a newer build
            rc=0
            dnf -q check-upgrade openscap-scanner || rc=$?
            if [ "$rc" -ne 100 ]; then  # see dnf(8)
                nvr=$(rpm -q openscap-scanner)
                echo "openscap-scanner from $ref doesn't upgrade existing $nvr" >&2
                false  # exit with ERR
            fi
            dnf -q -y upgrade openscap-scanner
            # invalidate VM snapshots
            rm -f /var/lib/libvirt/images/*.ready
    when: distro > rhel-7
  - finish+:
      - how: shell
        name: Restore original OpenSCAP (if upgraded from Packit)
        script: |
            set -xe
            repofile=/etc/yum.repos.d/openscap-upstream-packit.repo
            if [ -f "$repofile" ]; then
                dnf -q -y downgrade openscap-scanner
                rm -f "$repofile"
            fi
    when: distro > rhel-7
